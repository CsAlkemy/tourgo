"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const common_1 = require("@tsed/common");
const Mongoose = require("mongoose");
const ValidationErrorMiddleware_1 = require("./middlewares/ValidationErrorMiddleware");
const MongooseService_1 = require("./services/MongooseService");
let MongooseModule = class MongooseModule {
    constructor(expressApp, mongooseService) {
        this.expressApp = expressApp;
        this.mongooseService = mongooseService;
    }
    $onInit() {
        const promises = [];
        if (this.url) {
            promises.push(this.mongooseService.connect("default", this.url, this.connectionOptions || {}));
        }
        if (this.urls) {
            Object.keys(this.urls).forEach((key) => {
                promises.push(this.mongooseService.connect(key, this.urls[key].url, this.urls[key].connectionOptions || {}));
            });
        }
        return Promise.all(promises);
    }
    $afterRoutesInit() {
        this.expressApp.use(ValidationErrorMiddleware_1.ValidationErrorMiddleware);
    }
    $onDestroy() {
        return this.mongooseService.closeConnections();
    }
};
tslib_1.__decorate([
    common_1.Constant("mongoose.url"),
    tslib_1.__metadata("design:type", String)
], MongooseModule.prototype, "url", void 0);
tslib_1.__decorate([
    common_1.Constant("mongoose.connectionOptions"),
    tslib_1.__metadata("design:type", Object)
], MongooseModule.prototype, "connectionOptions", void 0);
tslib_1.__decorate([
    common_1.Constant("mongoose.urls"),
    tslib_1.__metadata("design:type", Object)
], MongooseModule.prototype, "urls", void 0);
MongooseModule = tslib_1.__decorate([
    common_1.Module(),
    tslib_1.__param(0, common_1.ExpressApplication),
    tslib_1.__metadata("design:paramtypes", [Function, MongooseService_1.MongooseService])
], MongooseModule);
exports.MongooseModule = MongooseModule;

//# sourceMappingURL=MongooseModule.js.map
