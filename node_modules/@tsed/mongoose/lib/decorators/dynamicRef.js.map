{"version":3,"sources":["decorators/dynamicRef.ts"],"names":[],"mappings":";;AAAA,yCAA8C;AAC9C,qCAAuE;AACvE,uCAAkD;AAClD,4CAA6C;AAG7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AACH,SAAgB,UAAU,CAAC,OAAe;IACxC,OAAO,sBAAe,CACpB,iBAAQ,CAAC,EAAC,GAAG,EAAE,MAAM,EAAC,CAAC,EACvB,eAAM,CAAC;QACL,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,0BAA0B;QACnC,WAAW,EAAE,uBAAuB;KACrC,CAAC,EACF,cAAO,CAAC,CAAC,KAAY,EAAE,EAAE;QACvB,OAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;IAClC,CAAC,CAAC,EACF,iBAAU,CAAC,2BAAe,EAAE;QAC1B,IAAI,EAAE,iBAAc,CAAC,KAAK,CAAC,QAAQ;QACnC,OAAO;KACR,CAAC,CACH,CAAC;AACJ,CAAC;AAhBD,gCAgBC","file":"dynamicRef.js","sourcesContent":["import {Property, Schema} from \"@tsed/common\";\nimport {applyDecorators, Store, StoreFn, StoreMerge} from \"@tsed/core\";\nimport {Schema as MongooseSchema} from \"mongoose\";\nimport {MONGOOSE_SCHEMA} from \"../constants\";\n\nexport type DynamicRef<T> = T | string;\n/**\n * Define a property as mongoose reference to other Model (decorated with @Model).\n *\n * ### Example\n *\n * ```typescript\n * @Model()\n * class FooModel {\n *\n *    @DynamicRef('type')\n *    field: DynamicRef<OtherFooModel | OtherModel>\n *\n *    @Enum(['OtherFooModel', 'OtherModel'])\n *    type: string\n * }\n *\n * @Model()\n * class OtherFooModel {\n * }\n *\n * @Model()\n * class OtherModel {\n * }\n * ```\n *\n * @param refPath\n * @returns {Function}\n * @decorator\n * @mongoose\n * @property\n */\nexport function DynamicRef(refPath: string) {\n  return applyDecorators(\n    Property({use: String}),\n    Schema({\n      type: String,\n      example: \"5ce7ad3028890bd71749d477\",\n      description: \"Mongoose Ref ObjectId\"\n    }),\n    StoreFn((store: Store) => {\n      delete store.get(\"schema\").$ref;\n    }),\n    StoreMerge(MONGOOSE_SCHEMA, {\n      type: MongooseSchema.Types.ObjectId,\n      refPath\n    })\n  );\n}\n"],"sourceRoot":"../../src"}