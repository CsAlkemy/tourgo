{"version":3,"sources":["decorators/postHook.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,uBAAuB,EAAE,kBAAkB,EAAC,MAAM,eAAe,CAAC;AAG1E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0CG;AACH,wBAAgB,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,kBAAkB,CAAC,GAAG,CAAC,GAAG,uBAAuB,CAAC,GAAG,CAAC,GAAG,QAAQ,CAe9G","file":"postHook.d.ts","sourcesContent":["import {getDecoratorType} from \"@tsed/core\";\nimport {MongoosePostErrorHookCB, MongoosePostHookCB} from \"../interfaces\";\nimport {applySchemaOptions} from \"../utils/schemaOptions\";\n\n/**\n * We can simply attach a `@PostHook` decorator to your model class and\n * define the hook function like you normally would in Mongoose.\n *\n * ```typescript\n * import {IgnoreProperty, Required} from \"@tsed/common\";\n * import {PostHook, Model} from \"@tsed/mongoose\";\n *\n * @Model()\n * @PostHook(\"save\", (car: CarModel) => {\n *    if (car.topSpeedInKmH > 300) {\n *        console.log(car.model, 'is fast!');\n *    }\n * })\n * export class CarModel {\n *    @IgnoreProperty()\n *    _id: string;\n *\n *    @Required()\n *    model: string;\n *\n *    @Required()\n *    isFast: boolean;\n *\n *    // or Prehook on static method\n *    @PostHook(\"save\")\n *    static postSave(car: CarModel) {\n *       if (car.topSpeedInKmH > 300) {\n *           console.log(car.model, 'is fast!');\n *       }\n *    }\n * }\n * ```\n *\n * This will execute the post-save hook each time a `CarModel` document is saved.\n *\n * @param {string} method\n * @param {MongoosePostHookCB<any> | MongoosePostErrorHookCB<any>} fn\n * @returns {Function}\n * @decorator\n * @mongoose\n * @class\n */\nexport function PostHook(method: string, fn?: MongoosePostHookCB<any> | MongoosePostErrorHookCB<any>): Function {\n  return (...args: any[]) => {\n    if (getDecoratorType(args) === \"method\") {\n      fn = args[0][args[1]].bind(args[0]);\n    }\n\n    applySchemaOptions(args[0], {\n      post: [\n        {\n          method,\n          fn: fn as MongoosePostHookCB<any> | MongoosePostErrorHookCB<any>\n        }\n      ]\n    });\n  };\n}\n"],"sourceRoot":"../../src"}