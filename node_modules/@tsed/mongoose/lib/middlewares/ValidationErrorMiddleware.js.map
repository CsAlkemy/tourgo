{"version":3,"sources":["middlewares/ValidationErrorMiddleware.ts"],"names":[],"mappings":";;;AAAA,yCAA6C;AAC7C,qCAA4C;AAC5C,yDAA6C;AAE7C;;GAEG;AAEH,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IACpC,GAAG,CAAQ,KAAU;QACnB,IAAI,KAAK,IAAI,aAAM,CAAC,eAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,eAAe,EAAE;YACxD,MAAM,GAAG,GAAG,IAAI,8BAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACxB,MAAM,GAAG,CAAC;SACX;QAED,MAAM,KAAK,CAAC;IACd,CAAC;CACF,CAAA;AATC;IAAK,mBAAA,YAAG,EAAE,CAAA;;;;oDAQT;AATU,yBAAyB;IADrC,mBAAU,EAAE;GACA,yBAAyB,CAUrC;AAVY,8DAAyB","file":"ValidationErrorMiddleware.js","sourcesContent":["import {Err, Middleware} from \"@tsed/common\";\nimport {getClass, nameOf} from \"@tsed/core\";\nimport {BadRequest} from \"ts-httpexceptions\";\n\n/**\n * @middleware\n */\n@Middleware()\nexport class ValidationErrorMiddleware {\n  use(@Err() error: any) {\n    if (error && nameOf(getClass(error)) === \"MongooseError\") {\n      const err = new BadRequest(error.message);\n      err.stack = error.stack;\n      throw err;\n    }\n\n    throw error;\n  }\n}\n"],"sourceRoot":"../../src"}