{"version":3,"sources":["interfaces/MongooseSchemaOptions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,WAAW,EAAE,MAAM,EAAE,aAAa,EAAC,MAAM,UAAU,CAAC;AACnH,OAAO,EAAC,gBAAgB,EAAC,MAAM,oBAAoB,CAAC;AAEpD,MAAM,WAAW,sBAAsB,CAAC,CAAC;IACvC,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,gBAAgB,GAAG,GAAG,CAAC;CACjF;AAED,MAAM,WAAW,qBAAqB,CAAC,CAAC;IACtC,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,gBAAgB,GAAG,GAAG,CAAC;CACzD;AAED,MAAM,WAAW,uBAAuB,CAAC,CAAC;IACxC,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,WAAW,KAAK,IAAI,GAAG,IAAI,CAAC;CACjF;AAED,MAAM,WAAW,kBAAkB,CAAC,CAAC;IACnC,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,WAAW,KAAK,IAAI,GAAG,IAAI,CAAC;CACrE;AAED,MAAM,WAAW,eAAe;IAC9B,MAAM,EAAE,MAAM,CAAC;IACf,EAAE,EAAE,qBAAqB,CAAC,GAAG,CAAC,GAAG,sBAAsB,CAAC,GAAG,CAAC,CAAC;IAC7D,QAAQ,CAAC,EAAE,OAAO,CAAC;IACnB,OAAO,CAAC,EAAE,iBAAiB,CAAC;CAC7B;AAED,MAAM,WAAW,gBAAgB;IAC/B,MAAM,EAAE,MAAM,CAAC;IACf,EAAE,EAAE,kBAAkB,CAAC,GAAG,CAAC,GAAG,uBAAuB,CAAC,GAAG,CAAC,CAAC;CAC5D;AAED,MAAM,WAAW,qBAAqB;IACpC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,GAAG,KAAK,IAAI,CAAC;IAChD,OAAO,CAAC,EAAE,GAAG,CAAC;CACf;AAED,MAAM,WAAW,oBAAoB;IACnC,MAAM,EAAE,MAAM,CAAC;IACf,OAAO,CAAC,EAAE,GAAG,CAAC;CACf;AAED,MAAM,WAAW,qBAAqB;IACpC,aAAa,CAAC,EAAE,aAAa,CAAC;IAC9B,OAAO,CAAC,EAAE,qBAAqB,EAAE,CAAC;IAClC,OAAO,CAAC,EAAE,oBAAoB,EAAE,CAAC;IACjC,GAAG,CAAC,EAAE,eAAe,EAAE,CAAC;IACxB,IAAI,CAAC,EAAE,gBAAgB,EAAE,CAAC;CAC3B","file":"MongooseSchemaOptions.d.ts","sourcesContent":["import {HookDoneFunction, HookErrorCallback, HookNextFunction, NativeError, Schema, SchemaOptions} from \"mongoose\";\nimport {MongooseDocument} from \"./MongooseDocument\";\n\nexport interface MongoosePreHookAsyncCB<T> {\n  (doc: MongooseDocument<T>, next: HookNextFunction, done: HookDoneFunction): any;\n}\n\nexport interface MongoosePreHookSyncCB<T> {\n  (doc: MongooseDocument<T>, next: HookNextFunction): any;\n}\n\nexport interface MongoosePostErrorHookCB<T> {\n  (error: any, doc: MongooseDocument<T>, next: (err?: NativeError) => void): void;\n}\n\nexport interface MongoosePostHookCB<T> {\n  (doc: MongooseDocument<T>, next: (err?: NativeError) => void): void;\n}\n\nexport interface MongoosePreHook {\n  method: string;\n  fn: MongoosePreHookSyncCB<any> | MongoosePreHookAsyncCB<any>;\n  parallel?: boolean;\n  errorCb?: HookErrorCallback;\n}\n\nexport interface MongoosePostHook {\n  method: string;\n  fn: MongoosePostHookCB<any> | MongoosePostErrorHookCB<any>;\n}\n\nexport interface MongoosePluginOptions {\n  plugin: (schema: Schema, options?: any) => void;\n  options?: any;\n}\n\nexport interface MongooseIndexOptions {\n  fields: object;\n  options?: any;\n}\n\nexport interface MongooseSchemaOptions {\n  schemaOptions?: SchemaOptions;\n  plugins?: MongoosePluginOptions[];\n  indexes?: MongooseIndexOptions[];\n  pre?: MongoosePreHook[];\n  post?: MongoosePostHook[];\n}\n"],"sourceRoot":"../../src"}